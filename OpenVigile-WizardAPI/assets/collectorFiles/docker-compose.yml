version: '3.9'
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

networks:
  default:
    name: openvigile
    driver: bridge

services:

  openvigileapi:
    image: devayushdubey/openvigile:openvigileapi
    container_name: openvigileapi
    environment:
      - API_PORT=OV_API_PORT
      - LOGS=9200
      - METRICS=9090
    ports:
      - "6300:6300"
    depends_on:
      otelcol:
        condition: service_started 
    logging: *logging

  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_librarie
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --web.listen-address=:PROM_PORT
    volumes:
      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 2000M
    ports:
      - "PROM_PORT"
    logging: *logging


  elasticsearch:
    image: elasticsearch:7.17.1
    container_name: elasticsearch
    ports:
      - "ELASTIC_PORT"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.port=ELASTIC_PORT
    logging: *logging


  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 100M
    volumes:
      - ./grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
    ports:
      - "DASH_PORT"
    environment:
      - GF_SERVER_HTTP_PORT=DASH_PORT
    depends_on:
      prometheus:
        condition: service_started 
    logging: *logging

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    command:
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger/ui"
      - "--prometheus.server-url"
      - "http://prometheus:PROM_PORT"
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    ports:
      - "JAEGER_PORT"                    # Jaeger UI
      - "4317"                           # OTLP gRPC default port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus
    logging: *logging

  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 2000M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml" ]
    volumes:
      - ./otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
      - "4317:4317"     # OTLP over gRPC receiver
      - "OTLP_PORT"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
      - "4433:4433"
    depends_on:
      prometheus:
        condition: service_started      
      elasticsearch:
        condition: service_started
      grafana:
        condition: service_started
      jaeger:
        condition: service_started
    logging: *logging
  